%define module   String-Tokenizer
%define version    0.05
%define release    %mkrel 1

Name:       perl-%{module}
Version:    %{version}
Release:    %{release}
License:    GPL or Artistic
Group:      Development/Perl
Summary:    A simple string tokenizer
Url:        http://search.cpan.org/dist/%{module}
Source:     http://www.cpan.org/modules/by-module/String/%{module}-%{version}.tar.gz
BuildArch: noarch
BuildRoot:  %{_tmppath}/%{name}-%{version}

%description
A simple string tokenizer which takes a string and splits it on whitespace.
It also optionally takes a string of characters to use as delimiters, and
returns them with the token set as well. This allows for splitting the
string in many different ways.

This is a very basic tokenizer, so more complex needs should be either
addressed with a custom written tokenizer or post-processing of the output
generated by this module. Basically, this will not fill everyones needs,
but it spans a gap between simple 'split / /, $string' and the other
options that involve much larger and complex modules.

Also note that this is not a lexical analyser. Many people confuse
tokenization with lexical analysis. A tokenizer mearly splits its input
into specific chunks, a lexical analyzer classifies those chunks. Sometimes
these two steps are combined, but not here.

%prep
%setup -q -n %{module}-%{version} 

%build
%{__perl} Makefile.PL INSTALLDIRS=vendor
%make

%check
make test

%install
rm -rf %buildroot
%makeinstall_std

%clean
rm -rf %buildroot

%files
%defattr(-,root,root)
%doc Changes README
%{_mandir}/man3/*
%perl_vendorlib/String

